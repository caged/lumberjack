/* src/App.svelte generated by Svelte v3.44.3 */
import {
	SvelteComponent,
	append,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	text,
	transition_in,
	transition_out
} from "../_snowpack/pkg/svelte/internal.js";

import Knob from "./Knob.svelte.js";

function create_fragment(ctx) {
	let div;
	let t;
	let knob;
	let current;
	knob = new Knob({ props: { value: 12, label: "foo" } });

	return {
		c() {
			div = element("div");
			t = text("hey\n\n  ");
			create_component(knob.$$.fragment);
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, t);
			mount_component(knob, div, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(knob.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(knob.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(knob);
		}
	};
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default App;