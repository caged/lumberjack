/* src/App.svelte generated by Svelte v3.44.3 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../_snowpack/pkg/svelte/internal.js";

import "../_snowpack/pkg/input-knob.js";
import Knob from "./Knob.svelte.js";

function create_fragment(ctx) {
	let div3;
	let div2;
	let div0;
	let knob0;
	let t;
	let div1;
	let knob1;
	let current;
	knob0 = new Knob({ props: { value: 12, label: "Pitch" } });
	knob1 = new Knob({ props: { value: 12, label: "Cent" } });

	return {
		c() {
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			create_component(knob0.$$.fragment);
			t = space();
			div1 = element("div");
			create_component(knob1.$$.fragment);
			attr(div0, "class", "w-12 h-12");
			attr(div1, "class", "w-12 h-12");
			attr(div2, "class", "grid grid-cols-2 gap-2 p-5 w-1/3");
		},
		m(target, anchor) {
			insert(target, div3, anchor);
			append(div3, div2);
			append(div2, div0);
			mount_component(knob0, div0, null);
			append(div2, t);
			append(div2, div1);
			mount_component(knob1, div1, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(knob0.$$.fragment, local);
			transition_in(knob1.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(knob0.$$.fragment, local);
			transition_out(knob1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div3);
			destroy_component(knob0);
			destroy_component(knob1);
		}
	};
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default App;